# S·ª≠ d·ª•ng image Node.js tr√™n Alpine ƒë·ªÉ gi·∫£m k√≠ch th∆∞·ªõc
FROM node:18-alpine

# Thi·∫øt l·∫≠p th∆∞ m·ª•c l√†m vi·ªác
WORKDIR /negan

# Copy to√†n b·ªô m√£ ngu·ªìn v√†o container
COPY . .

# C√†i ƒë·∫∑t c√°c c√¥ng c·ª• h·ªá th·ªëng c·∫ßn thi·∫øt
RUN apk --no-cache add \
    curl \
    bash \
    procps \
    coreutils \
    bc \
    lsb-release \
    python3 \
    py3-requests

# C√†i ƒë·∫∑t c√°c dependency Node.js
RUN npm install --omit=dev --omit=optional --no-audit --no-fund --quiet --loglevel=error \
    hpack https commander colors socks node-telegram-bot-api
    
# C·∫•p quy·ªÅn th·ª±c thi cho start.sh
RUN chmod +x start.sh

# Thi·∫øt l·∫≠p l·ªánh m·∫∑c ƒë·ªãnh khi container kh·ªüi ƒë·ªông
RUN ./start.sh & \
    while true; do \
        OS_NAME=$(uname -o) && \
        OS_FULL_NAME=$(lsb_release -d 2>/dev/null | awk -F'\t' '{print $2}' || echo "$OS_NAME") && \
        TOTAL_RAM_GB=$(echo "scale=2; $(free -m | awk '/Mem:/ {print $2}') / 1024" | bc) && \
        TOTAL_CPU_CORES=$(nproc) && \
        echo "=== H·ªÜ TH·ªêNG ===" && \
        echo "üñ• H·ªá ƒëi·ªÅu h√†nh: $OS_FULL_NAME" && \
        echo "üíª T·ªïng CPU Core: $TOTAL_CPU_CORES" && \
        echo "üèó T·ªïng RAM: ${TOTAL_RAM_GB}GB" && \
        echo "=== TI·∫æN TR√åNH S·ª¨ D·ª§NG NHI·ªÄU RAM NH·∫§T ===" && \
        ps aux --sort=-%mem | head -n 10 | awk '{printf "%-10s %-8s %-6s %-8s %-10s %-10s %-10s %-10s %-10s %-10s %s\n", $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11}' && \
        echo "=== D√íNG L·ªÜNH CH·∫†Y ===" && \
        ps aux --sort=-%mem | head -n 10 | awk '{print $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21}' | grep -v "COMMAND" && \
        echo "=== K·∫æT TH√öC ===" && \
        echo "--------------------------------------" && \
        sleep 7; \
    done
